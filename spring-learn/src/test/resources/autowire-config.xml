<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans
        https://www.springframework.org/schema/beans/spring-beans.xsd">

	<!-- 以下的按照构造器方式的类型进行注入 -->
	<bean class="org.springframework.learn.autowire.DiByConstructor$Service1">
		<property name="desc" value="service1" />
	</bean>
	<bean class="org.springframework.learn.autowire.DiByConstructor$Service2">
		<property name="desc" value="service2" />
	</bean>
	<bean class="org.springframework.learn.autowire.DiByConstructor" autowire="constructor" />

	<!-- 以下的测试按照类型的方式的扩展进行注入 -->
	<bean class="org.springframework.learn.autowire.DiByTypeExtend$Service1">
		<property name="desc" value="extService1" />
	</bean>
	<bean class="org.springframework.learn.autowire.DiByTypeExtend$Service2" />
	<bean class="org.springframework.learn.autowire.DiByTypeExtend" autowire="byType" />

	<!-- 以下的测试按照类型的方式进行注入 -->
	<!--
		容器在创建setterBean的时候，
		发现其autowire为byType，
		即按类型自动注入，
		此时会在SetterBean类中查找所有setter方法列表，
		其中就包含了setService方法，
		setService方法参数类型是IService，
		然后就会去容器中按照IService类型查找所有符合条件的bean列表，
		此时容器中会返回满足IService这种类型并且autowire-candidate=”true”的bean，
		刚才有说过bean元素的autowire-candidate的默认值是true，
		所以容器中符合条件的候选bean有2个：serviceA和serviceB，
		setService方法只需要一个满足条件的bean，
		此时会再去看这个列表中是否只有一个主要的bean（即bean元素的primary=“ture”的bean），
		而bean元素的primary默认值都是false，
		所以没有primary为true的bean，
		此时spring容器懵了，不知道选哪个了，此时就报错了，抛出NoUniqueBeanDefinitionException异常
	-->
	<bean class="org.springframework.learn.autowire.DiByType$Service1">
		<property name="desc" value="abc" />
	</bean>
	<bean class="org.springframework.learn.autowire.DiByType$Service2">
		<property name="decs" value="def" />
	</bean>
	<bean class="org.springframework.learn.autowire.DiByType$Service2" autowire-candidate="false">
		<property name="decs" value="def2" />
	</bean>
	<bean class="org.springframework.learn.autowire.DiByType" autowire="byType" />

	<!-- 以下的测试按照名字的方式进行注入 -->
	<bean id="service1" class="org.springframework.learn.autowire.DiByName$Service1">
		<property name="desc" value="service1" />
	</bean>

	<bean id="service2" class="org.springframework.learn.autowire.DiByName$Service2">
		<property name="decs" value="service2" />
	</bean>

	<bean id="service2-1" class="org.springframework.learn.autowire.DiByName$Service2">
		<property name="decs" value="service2-1" />
	</bean>

	<!-- autowire：byName 配置按照name进行自动注入 -->
	<bean id="diByName1" class="org.springframework.learn.autowire.DiByName" autowire="byName" />

	<!-- 当配置了自动注入，还可以使用手动的方式自动注入进行覆盖，手动的优先级更高一些 -->
	<bean id="diByName2" class="org.springframework.learn.autowire.DiByName" autowire="byName">
		<property name="service2" ref="service2-1" />
	</bean>

</beans>
